#!/usr/bin/env python
# -*- coding: utf-8 -*-
import telebot, time, json, gdata # –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram Bot API, –°–æ –≤—Ä–µ–º–µ–Ω–µ–º, —Å JSON, —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å JSON —Ñ–∞–π–ª–æ–º "data.json"
from multiprocessing import Process, freeze_support # –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏, –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å—é
from datetime import datetime # –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º

TOKEN = "paste your token" # –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞

# groupid : [status, votingstatus, votingpoll, [time1, time2], votingresult] - —à–∞–±–ª–æ–Ω —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ "data.json"
bot = telebot.TeleBot(TOKEN) # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞

# –û–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ –í—Ä–µ–º–µ–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤:
global timeStamp
timeStamp = "%H:%M %d.%m.%Y"
tm = "%M"
tstam = "%H"
tstamd = "%d"
# ------------------------------

TZ = 0 # –í—Ä–µ–º–µ–Ω–Ω–æ–π —Å–¥–≤–∏–≥ (–≤ —á–∞—Å–∞—Ö)
WAIT_TIME = 600 # –≤—Ä–µ–º—è –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)

def nowtime(): # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å —É—á–µ—Ç–æ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å–¥–≤–∏–≥–∞. –í—ã–≤–æ–¥–∏–º—ã –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ datetime.datetime
	temp = int(datetime.today().strftime(tstam))+TZ
	if temp > 23:
		temp -= 24
		return (datetime.today()).replace(hour=temp, day=int(datetime.today().strftime(tstamd))+1)
	return (datetime.today()).replace(hour=temp)

def check_send_messages():
	while True:
		dictt = gdata.load() # —Å—á–∏—Ç—ã–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Ñ–∞–π–ª–∞ "data.json"

		for i in dictt: # –ø—Ä–æ—Ö–æ–¥ –ø–æ –≤—Å–µ–º –≥—Ä—É–ø–ø–∞–º –≤ –±–∞–∑–µ –±–æ—Ç–∞
			try: # –Ω–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ –¥–ª—è –ª–æ–≤–ª–∏ TypeError –æ—à–∏–±–∫–∏, –≤–æ –∏–∑–±–µ–∂–∞–Ω–∏—è –Ω–µ–ª–∞–¥–æ–∫ —Å NoneType
				if time.time() - dictt[i][5] >= WAIT_TIME: # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–µ–¥—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å –Ω–∞—á–∞–ª–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
					poll = bot.stop_poll(i, dictt[i][2]) # –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –µ—Å–ª–∏ –ø—Ä–æ—à–ª–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –≤—Ä–µ–º—è
					dictt[i][5] = 9999999999999 # —Å–±—Ä–æ—Å —Ç–∞–π–º–µ—Ä–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è

					if dictt[i][1] and not(dictt[i][4]):
						# –≤—ã–≥—Ä—É–∑–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è:
						options = poll.options
						yes_votes_count = options[0].voter_count
						no_votes_count = options[1].voter_count
						# --------------------------------
						if yes_votes_count > no_votes_count:
							dictt[i][4] = True
							bot.send_message(i, "‚úîÔ∏è*–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–∫–æ–Ω—á–µ–Ω–æ.*‚úîÔ∏è\n‚úÖ–ö–æ–º–µ–Ω–¥–∞–Ω—Ç—Å–∫–∏–π —á–∞—Å –Ω–∞—á–Ω–µ—Ç—Å—è –≤ `"+str(dictt[i][3][0])+"` –∏ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è –≤ `"+str(dictt[i][3][1])+"`.‚úÖ", reply_to_message_id=dictt[i][2], parse_mode="Markdown")
							dictt[i][1] = True
						else:
							bot.send_message(i, "‚úîÔ∏è*–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–∫–æ–Ω—á–µ–Ω–æ.*‚úîÔ∏è\n‚ùå–ö–æ–º–µ–Ω–¥–∞–Ω—Ç—Å–∫–∏–π —á–∞—Å _–Ω–µ –±—É–¥–µ—Ç –Ω–∞—á–∞—Ç_‚ùå", reply_to_message_id=dictt[i][2], parse_mode="Markdown")
							# —Å–±—Ä–æ—Å –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è:
							dictt[i][3] = None
							dictt[i][1] = False
							# ------------------------------------
						dictt[i][2] = None # —Å–±—Ä–æ—Å –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
						
					gdata.update(dictt) # –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ "data.json"
			
				dictt = gdata.load()
				if dictt[i][4]:
					# –∑–∞–≥—Ä—É–∑–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∏ –ø–µ—Ä–µ–≤–æ–¥ –≤ –æ–±—å–µ–∫—Ç –∫–ª–∞—Å—Å–∞ datetime.datetime:
					start_time_RAW = dictt[i][3][0] 
					start_time = datetime.strptime(start_time_RAW, timeStamp)
					# ------------------------------------------------------------
					if nowtime() >= start_time:
						dictt[i][0] = True
						dictt[i][1] = False
						dictt[i][4] = None
						bot.send_message(i, "‚õîÔ∏è*–ö–æ–º–µ–Ω–¥–∞–Ω—Ç—Å–∫–∏–π —á–∞—Å –Ω–∞—á–∞—Ç!*‚õîÔ∏è\nüîú–û–Ω –ø—Ä–æ–¥–ª–∏—Ç—Å—è –¥–æ `"+str(dictt[i][3][1])+"`.", parse_mode="Markdown")
					gdata.update(dictt)
				if dictt[i][0]:
					end_time_RAW = dictt[i][3][1]
					end_time = datetime.strptime(end_time_RAW, timeStamp)
					if nowtime() >= end_time:
						dictt[i][0] = False
						dictt[i][1] = False
						dictt[i][2] = None
						dictt[i][3] = None
						dictt[i][4] = False
						bot.send_message(i, "*–ö–æ–º–µ–Ω–¥–∞–Ω—Ç—Å–∫–∏–π —á–∞—Å –æ–∫–æ–Ω—á–µ–Ω!*\n üîô     üîô     üîô     üîô     üîô     üîô", parse_mode="Markdown")
					gdata.update(dictt)
			except TypeError: # –í—ã–ª–æ–≤ TypeError –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—â–µ –Ω–µ —É—Å–ø–µ–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å—Å—è
				pass
	
		time.sleep(10) # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏


if __name__ == "__main__": # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ—Å—Ç—å –∫–æ–¥–∞ –∏–º–µ–Ω–Ω–æ –≥–ª–∞–≤–Ω—ã–º —Ñ–∞–π–ª–æ–º, –Ω—É–∂–Ω–∞ –¥–ª—è –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç–∏
	@bot.message_handler(func=lambda message: message.chat.type in ["group", "supergroup"], commands=['curfew']) # –í—ã–ª–æ–≤ –∫–æ–º–∞–Ω–¥—ã /curfew
	def echo(message):
		dictt = gdata.load()
		chatid = str(message.chat.id) # –≤—ã–Ω–µ—Å–µ–Ω–∏–µ id —á–∞—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
		if not(chatid in dictt):
			dictt.update({chatid:[False, False, None, None, False, 999999999999999]}) # –∑–∞–Ω–µ—Å–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã –≤ –±–∞–∑—É –±–æ—Ç–∞ –µ—Å–ª–∏ –µ–µ —Ç–∞–º –Ω–µ—Ç
		if dictt[chatid][0]:
			bot.delete_message(message.chat.id, message.message_id) # —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –µ—Å–ª–∏ –∏–¥–µ—Ç –∫–æ–º–µ–Ω–¥–∞–Ω—Ç—Å–∫–∏–π —á–∞—Å
		else:
			if not(dictt[chatid][0]):
				if dictt[chatid][1] or dictt[chatid][4]: 
					markup = telebot.types.InlineKeyboardMarkup() # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è markup'–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è inline –∫–Ω–æ–ø–æ–∫
					if not(dictt[chatid][4]):
						btn = telebot.types.InlineKeyboardButton("–ü–æ–∫–∞–∑–∞—Ç—å", url="t.me/c/"+str(chatid[4:])+"/"+str(dictt[chatid][2])) # —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –∏ —É–∫–∞–∑–∞–Ω–∏–µ url —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ–º 
						markup.row(btn) # —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–ø–æ–∫ –ø–æ —Ä—è–¥–∞–º –¥–ª—è –≤—ã–≤–æ–¥–∞. –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –≤ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä—è–¥.
						bot.reply_to(message, "‚ùå*–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–æ–º–µ–Ω–¥–∞–Ω—Ç—Å–∫–æ–≥–æ —á–∞—Å–∞ —É–∂–µ —Å–æ–∑–¥–∞–Ω–æ!*‚ùå", reply_markup=markup, parse_mode="Markdown")
					else:
						bot.reply_to(message, "üîí*–ö–æ–º–µ–Ω–¥–∞–Ω—Ç—Å–∫–∏–π —á–∞—Å –Ω–∞—á–Ω–µ—Ç—Å—è –≤* `"+str(dictt[chatid][3][0])+"`.üîí", parse_mode="Markdown")
				else:
					msg = bot.reply_to(message, "*–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ –∫–æ–º–µ–Ω–¥–∞–Ω—Ç—Å–∫–æ–≥–æ —á–∞—Å–∞.*üïê\n–§–æ—Ä–º–∞—Ç:\n`HH:MM DD.MM.YYYY` - `HH:MM DD.MM.YYYY`", parse_mode="Markdown")
					bot.register_next_step_handler(msg, add_date) # –≤—ã–ª–æ–≤ –æ—Ç–≤–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –£–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–¥–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –∏ —Ñ—É–Ω–∫—Ü–∏—è, –∏—Å–ø–æ–ª–Ω—è–µ–º–∞—è –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ
		gdata.update(dictt)

	# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –∫–æ–º–µ–Ω–¥–∞–Ω—Ç—Å–∫–∏–π —á–∞—Å –∏–¥–µ—Ç (status = True):
	@bot.message_handler(content_types=['text', 'audio', 'document', 'photo', 'sticker', 'video', 'video_note', 'voice', 'location', 'contact', 'new_chat_members', 'left_chat_member', 'new_chat_title', 'new_chat_photo', 'delete_chat_photo', 'group_chat_created', 'supergroup_chat_created', 'channel_chat_created', 'migrate_to_chat_id', 'migrate_from_chat_id', 'pinned_message'], func=lambda message: True)
	def delete_mess(message):
		chatid = str(message.chat.id)
		dictt = gdata.load()
		if not(chatid in dictt):
			dictt.update({chatid:[False, False, None, None, False, 999999999999999]})
		if dictt[chatid][0]:
			bot.delete_message(message.chat.id, message.message_id)
	# -----------------------------------------------------------------------

	# –§—É–Ω–∫—Ü–∏—è, –∏—Å–ø–æ–ª–Ω—è–µ–º–∞—è –ø—Ä–∏ –≤–≤–æ–¥–µ –≤—Ä–µ–º–µ–Ω–∏ –∫–æ–º—á–∞—Å–∞. –û–Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –Ω–∞ –∫–æ–º–µ–Ω–¥–∞–Ω—Ç—Å–∫–∏–π —á–∞—Å:
	def add_date(message):
		try:
			# –æ—Ç–¥–µ–ª–µ–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–∞ –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ –∫–æ–º—á–∞—Å–∞:
			arr = list(map(str, message.text.split(" - "))) 
			time1 = datetime.strptime(arr[0], timeStamp).strftime(timeStamp)
			time2 = datetime.strptime(arr[1], timeStamp).strftime(timeStamp)
			# ------------------------------------------------------------------------
			dictt = gdata.load()
			chatid = str(message.chat.id)
			dictt[chatid][3] = [time1, time2] # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞—Ç –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ –∫–æ–º—á–∞—Å–∞
			dictt[chatid][1] = True 
			poll = telebot.types.Poll("üõ°–í–∫–ª—é—á–∏—Ç—å –ª–∏ –∫–æ–º–µ–Ω–¥–∞–Ω—Ç—Å–∫–∏–π —á–∞—Å —Å "+str(time1)+" –ø–æ "+str(time2)+"?üõ°") # —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –∫–ª–∞—Å—Å–∞ Poll
			# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞ –≤ poll:
			poll.add("–î–∞")
			poll.add("–ù–µ—Ç")
			# ----------------------------------
			dictt[chatid][2] = str(bot.send_poll(chatid, poll).message_id) # –æ—Ç–ø—Ä–∞–≤–∫–∞ poll –≤ –≥—Ä—É–ø–ø—É –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ message_id –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
			dictt[chatid][5] = time.time() # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–ª—è –±—É–¥—É—â–µ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–Ω—Ü–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
			gdata.update(dictt)
		except: # –≤—ã–ª–æ–≤ ValueError, –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –≤—Ä–µ–º—è –Ω–µ –ø–æ —Ñ–æ—Ä–º–∞—Ç—É.
			bot.reply_to(message, "‚ùå*–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏.*‚ùå", parse_mode="Markdown") # –í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
	# ---------------------------------------------------------------------------------------------------


	freeze_support() # —Ñ—É–Ω–∫—Ü–∏—è, –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –º—É–ª—å—Ç–∏–ø—Ä–æ—Ü–µ—Å—Å–∏–Ω–≥–∞
	p1 = Process(target=check_send_messages, args=()) # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ñ—É–Ω–∫—Ü–∏–∏ check_send_messages
	p1.start() # –∑–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ p1

	while True:
		try:
			bot.polling(none_stop=True) # –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞, —Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º none_stop=True, —Ç.–µ. –±–æ—Ç –Ω–µ –±—É–¥–µ—Ç –∫—Ä–∞—à–∏—Ç—Å—è –ø—Ä–∏ –æ—à–∏–±–∫–µ –æ—Ç telegram API
		# –≤—ã–ª–æ–≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏ telegram API –∏ –∑–∞–¥–µ—Ä–∂–∫–∞ 15 —Å–µ–∫—É–Ω–¥, –≤–æ–∏–∑–±–µ–∂–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤:
		except Exception as e: 
			if e == KeyboardInterrupt: # –≤—ã–ª–æ–≤ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏ –∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞
				break
			print(e) # –≤—ã–≤–æ–¥ –æ—à–∏–±–∫–∏
			time.sleep(15)
		# ----------------------------------------------------------------------------------------------